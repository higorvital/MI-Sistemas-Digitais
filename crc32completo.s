	.data
	valor: .word 0x190ec013, 0xd195a9e9, 0xa8120939, 0x2909a5e0, 0x7e6c8d88, 0xe6ca28c4, 0xd2c30359, 0xe99cd2e3, 0x7045a780, 0x81ee977b, 0xdc9b0645, 0xda77916a, 0xc1d1beeb, 0x84a4e071, 0x232c56d5, 0x218bbed1, 0x44c706be, 0xc7cdcc9e, 0xd838c15b, 0x85748837, 0x79a451ec, 0x33d0b9c6, 0x5bcb738c, 0x1b5a86ea, 0xed1a3e00, 0xda120ca6, 0x6613bb99, 0x1cd6e9e9, 0x948e8e7d, 0x21716d75, 0x86c2de48, 0x31eb72bb, 0x622b6644, 0x4e011a3e, 0xc9c70c1a, 0x4a9e3a1d, 0x76c85743, 0xd62d00d5, 0x42d31885, 0x7386c440, 0x63621ece, 0x6660497c, 0x70bb1890, 0xd8325b9e, 0xdb528c4d, 0x2de3be06, 0x252392db, 0x3d8a1339, 0xd5164dc5, 0xe6b80bb3, 0x768ca865, 0x311ea577, 0x5e97ca9e, 0x8e986a24, 0x23ee1e46, 0x7ee4627e, 0xea55e9c5, 0xb62610c8, 0xaceba1d0, 0xa7824677, 0xae7ac2bb, 0x81aa1bed, 0x682e1d0b, 0x1aec5852, 0xeeb9d65d, 0xea8a4d04, 0x82a7456d, 0xdc9b88c4, 0x1a9ce7ec, 0xe2063d98, 0x8875e5c9, 0xc1536b00, 0x566d428d, 0x306131d0, 0xe71677a5, 0x054c287a, 0xa3332c6e, 0x54743b45, 0x0360467e, 0x50b34d38, 0x5403e506, 0x150b8493, 0x653189b8, 0x80596686, 0x8a322743, 0xb6b197c0, 0x90228314, 0xd99e7bea, 0x985aa845, 0xc8c39c52, 0xa019933a, 0x59531b33, 0x36c85cc0, 0xb7433291, 0xbb1ee9ca, 0x671a4991, 0x3ed333eb, 0x9646d923, 0xe6084641, 0x30221bcd, 0x895a344b, 0xcd4e1c97, 0xbd64bd62, 0x10647347, 0x900815d5, 0x362d870a, 0x19c2e2b9, 0x36db9909, 0x1034ce27, 0xb9d729c1, 0xe700b86d, 0x86ed1d40, 0x211e4d83, 0x7ebc4273, 0x68e3d786, 0x415cc563, 0x955d85d1, 0x3386450e, 0xa1bad81d, 0x3e6e648a, 0xb9588e9c, 0x7684cad3, 0x6d195725, 0x3394308b, 0x0b674648, 0x2a0ce31c, 0x349ce316, 0xc219e592, 0x3cb95097, 0x4d1c95b5, 0xea63db48, 0xb516a36a, 0x1bea720d, 0xb4936293, 0x10b1564c, 0xc1bd30ac, 0x668586c7, 0x46cac565, 0xd288de28, 0x31e32688, 0xb1415d3a, 0x0ccd00bd, 0xd7440db8, 0x10449418, 0xe8ce343e, 0xc5a9c98a, 0xede77343, 0x169618ac, 0x8158a599, 0xdc3b041c, 0x1d4000c4, 0xea4a309c, 0xb66ca492, 0x2857cbe9, 0x9d855a6c, 0xa496876e, 0x2c4dee59, 0x936120b1, 0xb4b1011c, 0x210850e0, 0x6c8daa4d, 0x45a31b82, 0xa80c8da4, 0xcc078e7b, 0x76cd1464, 0x1a80d45b, 0xed9c63ed, 0xaccbb7e6, 0x0e830c59, 0xda664d2b, 0x11d265ad, 0xd1981bd8, 0xdc67a150, 0x3c1e54e2, 0x0d5a0eea, 0xb7e51b7c, 0x35c1e3ca, 0xca635a83, 0xc71b17dc, 0x353d40b2, 0x2c4ce116, 0xb783599c, 0xa105e440, 0xab7a4b80, 0x66234955, 0x8c596b51, 0xe780ed7e, 0xada6a7e2, 0x43e7c0b0, 0xba9ccd6e, 0x3a158714, 0x09b95b15, 0xd779041a, 0x915cc807, 0x4a1263de, 0x652905c5, 0x37693bab, 0xd544ba00, 0x94ee7217, 0x0ca214a0, 0x1d653e53, 0x154a96ea, 0x5ca50721, 0x46cbcb7c, 0xd1355b44, 0x72d279b9, 0xa519c112, 0x4dbeb8d4, 0x93015cc4, 0xa2206921, 0x08688c79, 0x5b710d43, 0xebdb86e8, 0xb252193e, 0x72b75ebb, 0xe67b1d4e, 0xa52ba46d, 0x479e7946, 0xecb55820, 0x06c60841, 0x1a44e831, 0x5ab025d7, 0x1ebc3469, 0x3dd57164, 0x19140084, 0x19975dd8, 0x41611a4c, 0x0d2ad442, 0x7005bb67, 0x9248d65d, 0x8d2531ab, 0xa7eb0452, 0xa26391c7, 0xa29ba214, 0xc71a7e44, 0x8be494da, 0x6b3d25dd, 0x3b97bacc, 0xe63d9115, 0x81eaa139, 0x16eec5a8, 0xa56135e2, 0x500473b7, 0x7a8bc732, 0x57792b1a, 0x03650b0d, 0x2d82a498, 0x97262254, 0x115caad3, 0xcbe4e4b7
	.global main
	.text
main:
	movia r13, valor
	ldw r3, 0(r13) #Registrador onde será feito o calculo
	ldw r5, 4(r13) #Registrador onde será feito o calculo

	movi r8, 250 #Quantidade de registradores
	movi r14, 1
		
	movi r4, 32 #Qtd de bits de cada registrador
	
	movia r7, 0b10000001010000010100000110101011 #Polinomio de 32 bits

	loop:
		beq r4, r0, resetar #Contador chegar a 0, reseta ou para
		volta1:
		subi r4, r4, 1 #Decrementando contador
		blt r3, r0, calculo #Se a mensagem for negativa, fazer a xor
		slli r3, r3, 1 #Desloca um bit registrador principal
		bge r5, r0, volta2
		ori r3, r3, 1
		volta2:	
		slli r5, r5, 1 #Desloca um bit registrador auxiliar
		volta3: #Ponto de retorno do calculo da xor
		br loop
resetar:
	movi r4, 32 
	subi r8, r8, 1 #Diminui a qtd de registradores restantes
	beq r8, r0, led #Se n tem mais registradores, para
	beq r8, r14, volta1
	addi r13, r13, 4
	ldw r5, 4(r13) #Registrador onde será feito o calculo
	br volta1
calculo:
	slli r3, r3, 1 #Desloca um bit	registrador principal
	bge r5, r0, volta4
	ori r3, r3, 1
	volta4:
	slli r5, r5, 1 #Desloca um bit registrador auxiliar
	xor r3, r3, r7
	br volta3
led:
		
	movia r9, 0x00002030
	movia r10, 0x00002020
	
	movi r4, 8
	
	stw r3, 0(r10)
	movi r11, 4
		
	espera_1: 
		ldw r12, 0(r9)
		beq r12, r0, espera_1
	espera_2:
		ldw r12, 0(r9)
		bne r12, r0, espera_2
		ror r3, r3, r11
		stw r3, 0(r10)
		subi r4, r4, 1
		beq r4, r0, end
		br espera_1
end:
